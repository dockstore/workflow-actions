name: Reusable tagged release deploy

on:
  workflow_call:
    inputs:
      changelist:
        description: 'patch and pre-release metadata'
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04

    # Should only release tags
    # TODO: should only release tags where the required status checks are passing
    if: github.ref_type == 'tag'

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v3
      # Step that does that actual cache save and restore
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
           ${{ runner.os }}-maven-

      - name: install git secrets
        run: |
          wget --no-verbose -O git-secrets-1.3.0.tar.gz https://github.com/awslabs/git-secrets/archive/1.3.0.tar.gz
          tar -zxf git-secrets-1.3.0.tar.gz
          cd git-secrets-1.3.0
          sudo make install   
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17.0.4+8'
          distribution: 'adopt'

      - name: Set changelist
        run: |
          CHANGELIST_VERSION=${{ inputs.changelist }}
          if [ -z ${{ inputs.changelist }} ]; then
            # Break up the semantic version tag by the '.' delimiter and return the third field onward. Prefix this with the '.'
            # Ex: 1.16.0 -> .0 and 1.16.0-alpha.0 -> .0-alpha.0
            CHANGELIST_VERSION=.$(echo ${{ github.ref_name }} | cut -d. -f 3-)
          fi
          echo "CHANGELIST_VERSION" >> $GITHUB_ENV
          echo "${{ env.CHANGELIST_VERSION }}"

      - name: Store Maven project version 
        run: echo "maven_project_version=$(mvn help:evaluate -Dexpression=project.version -Dchangelist=${{ env.CHANGELIST_VERSION }} -q -DforceStdout)" >> $GITHUB_ENV

      - name: Read exported variable
        run: |
          echo "${{ env.maven_project_version }}"

      - name: Deploy with mvnw
        run: |
         git config --global user.email "${{ github.actor }}"
         git config --global user.name "${{ github.actor }}"
         ./mvnw --batch-mode deploy -ntp -s .github/collab-mvn-settings.xml -DskipTests -Dchangelist=${{ env.CHANGELIST_VERSION }}
        env: 
          COLLAB_DEPLOY_TOKEN: ${{ secrets.COLLAB_DEPLOY_TOKEN }}
